<?php


namespace whatwedo\WorkflowBundle\Form;


use ReflectionClass;
use Symfony\Component\Form\FormBuilderInterface;
use whatwedo\WorkflowBundle\Entity\Workflowable;
use Symfony\Component\Form\AbstractType;
use Symfony\Component\Form\Extension\Core\Type\ChoiceType;
use Symfony\Component\OptionsResolver\OptionsResolver;
use whatwedo\WorkflowBundle\EventHandler\TransitionsEventHandlerAbstract;

class WorkflowSupportedTypes extends AbstractType
{

    /** @var \Doctrine\Common\Persistence\ManagerRegistry */
    private $doctrine;

    /**
     * @param \Doctrine\Common\Persistence\ManagerRegistry $doctrine
     * @required
     */
    public function setDoctrine(\Doctrine\Common\Persistence\ManagerRegistry $doctrine): void
    {
        $this->doctrine = $doctrine;
    }

    public function getParent()
    {
        return ChoiceType::class;
    }

    public function configureOptions(OptionsResolver $resolver)
    {
        $choices = [];


        /** @var \Doctrine\ORM\EntityManagerInterface $em */
        $em = $this->doctrine->getManager();
        $classes = $em->getConfiguration()->getMetadataDriverImpl()->getAllClassNames();
        foreach($classes as $klass) {
            $reflect = new ReflectionClass($klass);
            if($reflect->implementsInterface(Workflowable::class)) {
                $choices[$reflect->getShortName()] = $klass;
            }
        }

        $resolver->setDefaults([
            'label' => 'Type',
            'choices' =>
                $choices
            ,
            'multiple' => true
        ]);
    }

    public function buildForm(FormBuilderInterface $builder, array $options)
    {
        parent::buildForm($builder, $options); // TODO: Change the autogenerated stub
    }
}
